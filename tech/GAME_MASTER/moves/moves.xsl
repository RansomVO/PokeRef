<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:include href="/xsl/global.xsl"/>

  <!-- Main Template -->
  <xsl:template match="/Root">
    <html lang="en-us">
      <head>
        <!-- This is to make the font size consistent on mobile. -->
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <script>
          <xsl:attribute name="src">
            <xsl:text>/js/global.js?cacherefresh=</xsl:text>
            <xsl:value-of select="$CurrentDate"/>
          </xsl:attribute>
        </script>
        <link type="text/css" rel="stylesheet" >
          <xsl:attribute name="href">
            <xsl:text>index.css?cacherefresh=</xsl:text>
            <xsl:value-of select="$CurrentDate"/>
          </xsl:attribute>
        </link>

        <title>
          <xsl:value-of select="Moves/Category"/> Moves
        </title>
      </head>
      <body>
        <h1>
          <xsl:value-of select="Moves/Category"/> Moves
        </h1>

        <p>
          This chart lists the info for all of the <xsl:value-of select="Moves/Category"/> Moves for Pokemon.
        </p>
        <div class="INDENT">
          <p class="PARENT">
            Here is what is in each column:
          </p>
          <ul class="CHILD">
            <li>
              <b>Move Name</b>: The name of the move. <span class="NOTE">(Duh!)</span>
            </li>
            <li>
              <b>Type</b>: The type of the Move. <span class="NOTE">
                (This is used to determine the Effectiveness of the Move against a Defending Pokemon.)
              </span>
            </li>
            <li>
              <b>Energy</b>
              <xsl:text>: The amount of energy </xsl:text>
              <xsl:choose>
                <xsl:when test="Moves/Category = 'Charged'">
                  <xsl:text>required to perform the Move.</xsl:text>
                  <span class="NOTE"> (The '-' indicates it is using Energy instead of creating it.)</span>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>generated by performing the Move.</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </li>
            <li>
              <b>Power</b>: The amount of damage caused by the Move.
            </li>
            <li>
              <b>Time</b>: The amount of time <span class="NOTE">(in seconds)</span> it takes to perform Move.
            </li>
          </ul>
          <p>
            More info about the use of these values can be found in <a href="/charts/effectiveness.html">Move Effectiveness</a> or <a href="../../movesetformulas.html">Move Set Formulas</a> pages.
            <br />Also see
            <xsl:choose>
              <xsl:when test="Moves/Category = 'Charged'">
                <a href="moves.fast.html">Fast Moves</a>
              </xsl:when>
              <xsl:otherwise>
                <a href="moves.charged.html">Charged Moves</a>
              </xsl:otherwise>
            </xsl:choose>.
          </p>
          <div class="INDENT CHILD NOTE">
            <p class="PARENT">
              <b>NOTE</b>: These are the values necessary to calculate the DPS of <a href="/charts/movesets.html">Move Sets</a>.
            </p>
          </div>
        </div>

        <br />
        <table border="1">
          <xsl:call-template name="CreateTableHeaders" />
          <xsl:apply-templates select="Moves/Move">
            <xsl:sort select="Name" order="ascending" />
          </xsl:apply-templates>
        </table>

        <!-- This script is defined in /js/global.js -->
        <script>WriteFooter();</script>
      </body>
    </html>
  </xsl:template>

  <!-- Template to create the headers for the table -->
  <xsl:template name="CreateTableHeaders">
    <tr style="font-size:x-large;">
      <th>Move Name</th>
      <th>Type</th>
      <th>Energy</th>
      <th>Power</th>
      <th>Time</th>
    </tr>
  </xsl:template>

  <xsl:template match="Move">
    <tr>
      <th align="left">
        <xsl:value-of select="Name"/>
      </th>
      <td align="left">
        <xsl:call-template name="OutputTypeIcon">
          <xsl:with-param name="Type" select="Type" />
        </xsl:call-template>
        <xsl:text> </xsl:text>
        <xsl:value-of select="Type"/>
      </td>
      <td align="right">
        <xsl:value-of select="Energy"/>
      </td>
      <td align="right">
        <xsl:value-of select="Power"/>
      </td>
      <td align="right">
        <xsl:value-of select="format-number(Time, '0.0')"/>
      </td>
    </tr>
  </xsl:template>

</xsl:stylesheet>